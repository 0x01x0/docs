(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{384:function(e,a,t){"use strict";t.r(a);var r=t(4),n=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("某些容器可能需要稳定的运行，经常更新或重启可能会造成一些问题，这时我们可以使用一些选项参数来选择与控制容器的更新。")]),e._v(" "),t("h2",{attrs:{id:"容器更新列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器更新列表"}},[e._v("#")]),e._v(" 容器更新列表")]),e._v(" "),t("p",[e._v("假设我们只想更新 nginx、redis 这两个容器，我们可以把容器名称追加到启动命令的最后面，就像下面这个例子：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -d \\\n    --name watchtower \\\n    --restart unless-stopped \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    containrrr/watchtower -c \\\n    nginx redis\n")])])]),t("p",[e._v("博主觉得把需要更新的容器名称写在启动命令中不利于管理，于是想了个更好的方法，建立一个更新列表文件。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ cat ~/.watchtower.list\naria2-pro\nunlockmusic\nmtg\n...\n")])])]),t("p",[e._v("这样只需要调整列表后删除 Watch­tower 容器并重新执行上面的命令重新启动 Watch­tower 即可。")]),e._v(" "),t("p",[e._v("通过变量的方式去调用这个列表：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -d \\\n    --name watchtower \\\n    --restart unless-stopped \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    containrrr/watchtower -c \\\n    $(cat ~/.watchtower.list)\n")])])]),t("p",[e._v("这样只需要调整列表后删除 Watch­tower 容器并重新执行上面的命令重新启动 Watch­tower 即可。")]),e._v(" "),t("h2",{attrs:{id:"设置单个容器自动更新特征"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置单个容器自动更新特征"}},[e._v("#")]),e._v(" 设置单个容器自动更新特征")]),e._v(" "),t("p",[e._v("给容器中添加 com.centurylinklabs.watchtower.enable 这个 LA­BEL 并设置它的值为 false，或者在启动命令中加入 --label com.centurylinklabs.watchtower.enable=false 参数可以排除相应的容器。下面这个例子是博主的 openwrt-mini 镜像的容器启动命令，Watch­tower 将永远忽略它的更新，即使它包含在自动更新列表中。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -d \\\n    --name openwrt-mini \\\n    --restart always \\\n    --network openwrt \\\n    --privileged \\\n    --label com.centurylinklabs.watchtower.enable=false \\\n    p3terx/openwrt-mini \\\n    /sbin/init\n")])])]),t("p",[e._v("当容器启动命令中加入 --label com.centurylinklabs.watchtower.enable=true 参数，并且给 Watch­tower 加上 --label-enable 选项时，Watch­tower 将只更新这些包含此参数的容器。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -d \\\n    --name watchtower \\\n    --restart unless-stopped \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    containrrr/watchtower -c \\\n    --label-enable\n")])])]),t("p",[e._v("--label-enable 可以简写为 -e：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -d \\\n    --name watchtower \\\n    --restart unless-stopped \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    containrrr/watchtower -ce\n")])])]),t("p",[e._v("因为需要在容器启动时进行设置，且设置后就无法直接更改，只能重建容器，所以这种方式的灵活性不如更新列表法。尤其是在设置 com.centurylinklabs.watchtower.enable=false 参数后容器将永远被 Watch­tower 忽略，也包括后面将要提到的手动更新方式，所以一般不推荐这样做，除非你愿意手动重建的原生方式更新。")])])}),[],!1,null,null,null);a.default=n.exports}}]);